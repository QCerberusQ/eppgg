name: digiepg update

on:
  schedule:
    # Her 30 dakikada bir Ã§alÄ±ÅŸÄ±r.
    # Ã–rnek: 00:00, 00:30, 01:00, 01:30 vb.
    - cron: '*/30 * * * *'
  # Manuel Ã§alÄ±ÅŸtÄ±rma iÃ§in
  workflow_dispatch:

permissions:
  contents: write

jobs:
  epg-update:
    runs-on: ubuntu-latest

    steps:
      - name: Repo klonla
        # Depoyu Ã§alÄ±ÅŸma dizinine klonlar.
        uses: actions/checkout@v4

      - name: Python kurulumu
        # Python 3.x sÃ¼rÃ¼mÃ¼nÃ¼ kurar.
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: BaÄŸÄ±mlÄ±lÄ±klarÄ± yÃ¼kle
        # Gerekli Python kÃ¼tÃ¼phanelerini yÃ¼kler.
        # requests ve beautifulsoup4 kÃ¼tÃ¼phaneleri aynÄ± anda yÃ¼klenir.
        run: |
          pip install requests beautifulsoup4

      - name: EPG Verisini GÃ¼ncelle
        # digiepg.py betiÄŸini Ã§alÄ±ÅŸtÄ±rÄ±r.
        # Ã‡alÄ±ÅŸma dizinindeki dosyalarÄ± listeler (hata ayÄ±klama iÃ§in faydalÄ±).
        run: |
          python digiepg.py
          ls -lah

      - name: Commit & Push
        # DeÄŸiÅŸiklikleri Git deposuna kaydeder ve ana dala (main branch) gÃ¶nderir.
        run: |
          # Git kullanÄ±cÄ± adÄ± ve e-posta ayarlarÄ±nÄ± yapar.
          git config --global user.name "epg-bot"
          git config --global user.email "epg@bot.com"
          
          # digiepg.xml dosyasÄ±nÄ± staging alanÄ±na ekler.
          # Dosya yoksa uyarÄ± verir ve iÅŸlemeye devam eder.
          git add digiepg.xml || echo "digiepg.xml dosyasÄ± bulunamadÄ± veya eklenemedi."
          
          # DeÄŸiÅŸiklikleri commit eder.
          # DeÄŸiÅŸiklik yoksa uyarÄ± verir ve iÅŸlemeye devam eder.
          git commit -m "ğŸ”„ EPG otomatik gÃ¼ncellendi" || echo "YapÄ±lacak bir deÄŸiÅŸiklik yok."
          
          # DeÄŸiÅŸiklikleri origin/main'e push eder.
          # Push baÅŸarÄ±sÄ±z olursa uyarÄ± verir ve iÅŸlemeye devam eder.
          git push origin main || echo "Push iÅŸlemi baÅŸarÄ±sÄ±z oldu veya gerekli deÄŸildi."
